@model IEnumerable<DoAn_QuanLyThuVienSach.Models.Loan>
@{
    ViewData["Title"] = "Sách đang mượn";
}

<style>
    /* CSS để làm đẹp giao diện */
    .page-title {
        font-weight: 600;
        border-bottom: 2px solid #eee;
        padding-bottom: 10px;
        margin-bottom: 30px;
    }

    .table-manage {
        width: 100%;
        border-collapse: collapse;
        box-shadow: 0 4px 20px rgba(0,0,0,0.05);
        border-radius: 8px;
        overflow: hidden;
        /* ✅ THÊM DÒNG NÀY: Giúp các cột chia đều chiều rộng */
        table-layout: fixed;
    }

        /* ✅ SỬA LẠI CSS Ở ĐÂY */
        .table-manage thead tr {
            background-color: #f8f9fa; /* Tô màu cho CẢ DÒNG header */
        }

        .table-manage th, .table-manage td {
            padding: 1rem;
            vertical-align: middle;
            text-align: left;
            border-bottom: 1px solid #dee2e6;
            /* Thêm word-wrap để tránh chữ quá dài làm vỡ layout */
            word-wrap: break-word;
        }

        .table-manage th {
            font-weight: 500;
        }

        .table-manage tbody tr:hover {
            background-color: #f1f3f5;
        }

    .book-title-link {
        color: #0056b3;
        font-weight: 500;
        text-decoration: none;
    }

        .book-title-link:hover {
            text-decoration: underline;
        }

    .btn-return {
        background-color: #28a745;
        color: white;
        border: none;
        padding: 8px 15px;
        border-radius: 5px;
        cursor: pointer;
        transition: background-color 0.2s ease;
        font-size: 0.9em;
        display: inline-flex;
        align-items: center;
        gap: 5px;
    }

        .btn-return:hover {
            background-color: #218838;
        }
</style>

<br />
<h1 class="page-title">@ViewData["Title"]</h1>
<p class="text-muted">Danh sách các sách bạn đang mượn và chưa trả.</p>

@if (!Model.Any())
{
    <div class="alert alert-info mt-4" role="alert">
        Bạn không có sách nào đang mượn.
    </div>
}
else
{
    <table class="table-manage mt-4">
        <thead>
            <tr>
                <th>Tên sách</th>
                <th>Ngày mượn</th>
                <th>Ngày hẹn trả</th>
                <th class="text-center">Số lượng</th>
                <th class="text-center">Hành động</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        <a asp-controller="TrangChu" asp-action="Detail" asp-route-id="@item.BookId" class="book-title-link">
                            @item.Book.Title
                        </a>
                    </td>
                    <td>@item.DateBorrowed.ToString("dd/MM/yyyy")</td>
                    <td>@item.DueDate.ToString("dd/MM/yyyy")</td>
                    <td class="text-center">@item.Quantity</td>
                    <td class="text-center">
                        <form asp-action="ReturnBook" asp-route-id="@item.LoanId" method="post" class="return-book-form">
                            <button type="submit" class="btn-return">
                                <i class="fas fa-undo-alt"></i> Trả sách
                            </button>
                        </form>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@section Scripts {
    @if (TempData["SuccessMessage"] != null)
    {
        <script type="text/javascript">
            const Toast = Swal.mixin({
                toast: true,
                position: 'top-end',
                showConfirmButton: false,
                timer: 3000,
                timerProgressBar: true,
                didOpen: (toast) => {
                    toast.addEventListener('mouseenter', Swal.stopTimer)
                    toast.addEventListener('mouseleave', Swal.resumeTimer)
                }
            });

            Toast.fire({
                icon: 'success',
                title: @Html.Raw(Json.Serialize(TempData["SuccessMessage"]))
            });
        </script>
    }
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Lấy tất cả các form trả sách trên trang
            const returnForms = document.querySelectorAll('.return-book-form');

            // Gán sự kiện cho mỗi form
            returnForms.forEach(form => {
                form.addEventListener('submit', function (event) {
                    // Ngăn form gửi đi ngay lập tức
                    event.preventDefault();

                    Swal.fire({
                        title: 'Xác nhận trả sách?',
                        text: "Bạn có chắc chắn trả lại sách không?",
                        icon: 'question',
                        showCancelButton: true,
                        confirmButtonColor: '#28a745', // Màu xanh lá
                        cancelButtonColor: '#6c757d',  // Màu xám
                        confirmButtonText: 'Đúng!',
                        cancelButtonText: 'Hủy'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Nếu người dùng xác nhận, gửi form đi
                            form.submit();
                        }
                    })
                });
            });
        });
    </script>
}